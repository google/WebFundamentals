---
layout: article
title: "Краткий справочник"
description: "Краткий обзор свойств элемента video."
introduction: "Краткий обзор свойств элемента video."
article:
  written_on: 2014-04-16
  updated_on: 2014-04-29
  order: 5
collection: videos
authors:
  - samdutton
key-takeaways:
  add-a-video:
    - Используйте элемент video для загрузки, декодирования и воспроизведения видео на своем сайте.
    - Запишите видео в нескольких форматах, адаптированных под различные мобильные платформы.
    - Установите корректный размер видеофайлов; он не должен превышать максимальный размер контейнеров.
    - Контент должен быть доступен пользователям с ограниченными возможностями. Добавьте track как дочерний элемент video.
remember:
  media-fragments:
    - Media Fragments API поддерживается большинством платформ за исключением iOS.
    - Убедитесь, что ваш сервер поддерживает запросы с диапазонами. Запросы с диапазонами по умолчанию включены на большинстве серверов, однако некоторые хостинги отключают их.
  dont-overflow:
    - При изменении размеров элемента не нарушайте изначального соотношения ширины и высоты видео. Сплющенное или вытянутое изображение выглядит не лучшим образом.
  accessibility-matters:
    - Элементы track поддерживаются в Chrome для Android, iOS Safari и всех существующих в настоящее время браузерах для ПК за исключением Firefox (более подробную информацию вы найдете по адресу <a href="http://caniuse.com/track" title="Браузеры, поддерживающие элементы track">caniuse.com/track</a>). Вы также можете использовать полизаполнения. Мы рекомендуем <a href='//www.delphiki.com/html5/playr/' title='Полизаполнение Playr'>Playr</a> или <a href='//captionatorjs.com/' title='Полизаполнение Captionator'>Captionator</a>.
  construct-video-streams:
    - MSE поддерживаются в браузерах Chrome и Opera для Android, а также в Internet Explorer 11 и Chrome для ПК. В будущем планируется добавить поддержку <a href='http://wiki.mozilla.org/Platform/MediaSourceExtensions' title='Сроки внедрения поддержки Media Source Extensions в Firefox'>Firefox</a>.
---

{% wrap content%}

{% include modules/toc.liquid %}

<style>

  img, video, object {
    max-width: 100%;
  }

  img.center {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

</style>

## Атрибуты элемента video

Полный список атрибутов элемента video и их описание вы можете найти [здесь](//www.w3.org/TR/html5/embedded-content-0.html#the-video-element).

<table class="table">
  <thead>
      <th>Атрибут</th>
      <th>Совместимость</th>
      <th>Описание</th>
  </thead>
  <tbody>
    <tr>
      <td data-th="Атрибут"><code>src</code></td>
      <td data-th="Совместимость">Все браузеры</td>
      <td data-th="Описание">Адрес (URL) видео.</td>
    </tr>
    <tr>
      <td data-th="Атрибут"><code>poster</code></td>
      <td data-th="Совместимость">Все браузеры</td>
      <td data-th="Описание">Адрес (URL) изображения, которое браузер будет показывать при отображении видео без загрузки самого видеофайла.</td>
    </tr>
    <tr>
      <td data-th="Атрибут"><code>preload</code></td>
      <td data-th="Совместимость">Все мобильные браузеры игнорируют предварительную загрузку.</td>
      <td data-th="Описание">Сообщает браузеру, что до начала воспроизведения необходимо предварительно загрузить метаданные (или какое-либо видео). Варианты значений: none, metadata и auto (вы найдете более подробную информацию в разделе `Предварительная загрузка`). </td>
    </tr>
    <tr>
      <td data-th="Атрибут"><code>autoplay</code></td>
      <td data-th="Совместимость">Не поддерживается на iPhone и устройствах Android, поддерживается во всех браузерах для ПК, Firefox и Opera для Android, а также на iPad.</td>
      <td data-th="Description">Автоматически начинает загрузку и воспроизведение (более подробную информацию вы найдете в разделе `Автовоспроизведение`). </td>
    </tr>
    <tr>
      <td data-th="Атрибут"><code>loop</code></td>
      <td data-th="Совместимость">Все браузеры</td>
      <td data-th="Описание">Закольцовывает видео.</td>
    </tr>
    <tr>
      <td data-th="Атрибут"><code>controls</code></td>
      <td data-th="Совместимость">Все браузеры</td>
      <td data-th="Описание">Отображает кнопки управления по умолчанию (воспроизведение, пауза и т. д.)</td>
    </tr>
  </tbody>
</table>

### Автовоспроизведение

На ПК атрибут autoplay означает, что браузер должен немедленно начать загрузку и воспроизведение видео. На iOS и в Chrome для Android атрибут autoplay не работает. Пользователь должен нажать на экран для воспроизведения видео.

Даже в тех случаях, когда автовоспроизведение работает, вы должны тщательно оценить необходимость его подключения:

* Потребляемый трафик может довольно дорого стоить для пользователя.
* Автоматическая загрузка и воспроизведение видео может заметно снизить пропускную способность и сильно загрузить процессор. Это, в свою очередь, вызовет задержки в отрисовке страницы.
* Автовоспроизведение видео или аудио может оказаться слишком навязчивым для пользователя.

Параметры автовоспроизведения можно настроить в Android WebView с помощью [WebSettings API](//developer.android.com/reference/android/webkit/WebSettings.html#setMediaPlaybackRequiresUserGesture(boolean)).
По умолчанию ставится значение true, однако приложение WebView может отключить его.

### Предварительная загрузка

Атрибут preload сообщает браузеру, какой объем информации или контента должен быть предварительно загружен.

<table>
  <thead>
    <tr>
      <th>Значение</th>
      <th>Описание</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td data-th="Значение"><code>none</code></td>
      <td data-th="Описание">Пользователь может даже не смотреть видео; предварительная загрузка не требуется</td>
    </tr>
    <tr>
      <td data-th="Значение"><code>metadata</code></td>
      <td data-th="Описание">Метаданные (длительность, размер, текстовые треки) должны быть предварительно загружены с минимальной загрузкой видео.</td>
    </tr>
    <tr>
      <td data-th="Значение"><code>auto</code></td>
      <td data-th="Описание">Желательна немедленная загрузка всего видео целиком.</td>
    </tr>
  </tbody>
</table>

Атрибут preload работает по-разному на различных платформах.
Например, Chrome буферизует 25 секунд видео на ПК, однако на iOS или Android не буферизует ничего. Это означает, что при воспроизведении видео на мобильном устройстве может возникнуть некоторая задержка, чего не может случиться на ПК. Более подробную информацию вы можете найти на [тестовой странице Стива Судера](//stevesouders.com/tests/mediaevents.php).

## JavaScript

В [статье на HTML5 Rocks, посвященной видео](//www.html5rocks.com/ru/tutorials/video/basics/#toc-javascript), прекрасно описаны свойства, методы и события JavaScript, которые можно использовать для настройки воспроизведения видео. Мы включили эту информацию в наши материалы, дополнив ее данными, касающимися мобильных платформ.

### Свойства

<table class="table">
  <thead>
    <th>Свойство</th>
    <th>Описание</th>
  </thead>
  <tbody>
    <tr>
      <td data-th="Свойство"><code>currentTime</code></td>
      <td data-th="Описание">Устанавливает время начала воспроизведения в секундах.</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>volume</code></td>
      <td data-th="Описание">Устанавливает уровень громкости воспроизведения видео.</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>muted</code></td>
      <td data-th="Описание">Отключает звук при воспроизведении видео.</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>playbackRate</code></td>
      <td data-th="Описание">Устанавливает скорость воспроизведения. 1 - нормальная скорость.</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>buffered</code></td>
      <td data-th="Описание">Информация о том, какой объем видео буферизован и готов к воспроизведению (посмотрите <a href="http://people.mozilla.org/~cpearce/buffered-demo.html" title="Пример, демонстрирующий буферизацию видео в элементе canvas">пример</a>).</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>currentSrc</code></td>
      <td data-th="Описание">Адрес, по которому находится воспроизводимое видео.</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>videoWidth</code></td>
      <td data-th="Описание">Ширина видео в пикселях (может отличаться от ширины элемента video).</td>
    </tr>
    <tr>
      <td data-th="Свойство"><code>videoHeight</code></td>
      <td data-th="Описание">Высота видео в пикселях (может отличаться от высоты элемента video).</td>
    </tr>
  </tbody>
</table>

Свойства playbackRate ({% link_sample _code/scripted.html %}см. пример{% endlink_sample %}) и volume не поддерживаются на мобильных устройствах.

### Методы

<table class="table">
  <thead>
    <th>Метод</th>
    <th>Описание</th>
  </thead>
  <tbody>
    <tr>
      <td data-th="Метод"><code>load()</code></td>
      <td data-th="Описание">Загрузить или перезагрузить источник видео, не начиная воспроизведение, например когда атрибут src элемента video изменен с помощью JavaScript.</td>
    </tr>
    <tr>
      <td data-th="Метод"><code>play()</code></td>
      <td data-th="Описание">Воспроизвести видео, начиная с текущей позиции.</td>
    </tr>
    <tr>
      <td data-th="Метод"><code>pause()</code></td>
      <td data-th="Описание">Приостановить воспроизведение видео в текущей позиции.</td>
    </tr>
    <tr>
      <td data-th="Метод"><code>canPlayType('format')</code></td>
      <td data-th="Описание">Определить, какие форматы поддерживаются (см. раздел `Уточните, какие форматы поддерживаются`).</td>
    </tr>
  </tbody>
</table>

На мобильных платформах за исключением Opera для Android методы play() и pause() работают только в том случае,
если они вызваны в ответ на действие пользователя, например нажатие кнопки (см. {% link_sample _code/scripted.html %}пример{% endlink_sample %}). Точно так же не может быть инициировано воспроизведение такого контента, как встроенные видео YouTube.

### События

Ниже описана только те медиасобытия, которые могут быть инициированы. Полный список медиасобытий вы найдете на [этой странице](//developer.mozilla.org/docs/Web/Guide/Events/Media_events) Mozilla Developer Network.

<table class="table">
  <thead>
    <th>Событие</th>
    <th>Описание</th>
  </thead>
  <tbody>
    <tr>
      <td data-th="Событие"><code>canplaythrough</code></td>
      <td data-th="Описание">Инициируется, когда доступен достаточный объем данных, чтобы браузер мог воспроизвести видео целиком без остановок.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>ended</code></td>
      <td data-th="Описание">Инициируется, когда воспроизведение видео закончено.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>error</code></td>
      <td data-th="Описание">Инициируется, когда произошла ошибка.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>playing</code></td>
      <td data-th="Описание">Инициируется, когда видео воспроизводится в первый раз, после паузы или после перезапуска.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>progress</code></td>
      <td data-th="Описание">Периодически инициируется для обозначения прогресса процесса загрузки.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>waiting</code></td>
      <td data-th="Описание">Инициируется, когда действие отложено в ожидании завершения иного действия.</td>
    </tr>
    <tr>
      <td data-th="Событие"><code>loadedmetadata</code></td>
      <td data-th="Описание">Инициируется, когда браузер завершил загрузку метаданных видео: длительности, размеров и текстовых треков.</td>
    </tr>
  </tbody>
</table>

{% include modules/nextarticle.liquid %}

{% endwrap %}

