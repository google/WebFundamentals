---
layout: article
title: "الصور في الترميز"
description: "يتميز العنصر `img` بأهميته الكبيرة؛ نظرًا لأنه يساعد على التنزيل وفك الترميز وعرض المحتوى، ولذلك تتوافق المتصفحات الحديثة مع عدد مختلف من تنسيقات الصور."
introduction: "يتميز العنصر <code>img</code> بأهميته الكبيرة؛ نظرًا لأنه يساعد على التنزيل وفك الترميز وعرض المحتوى، ولذلك تتوافق المتصفحات الحديثة مع عدد مختلف من تنسيقات الصور.  لا يختلف تضمين الصور التي تعمل على مختلف الأجهزة عن المخصصة لأجهزة سطح المكتب، ولن يلزم سوى بعض التغييرات الطفيفة لتوفير انطباع جيد."
authors:
  - petelepage
article:
  written_on: 2014-04-30
  updated_on: 2014-09-30
  order: 1
collection: images
key-takeaways:
  img-in-markup:
    - استخدم الأحجام النسبية مع الصور لمنع تجاوز حدود الحاوية بدون قصد.
    - استخدم العنصر <code>picture</code> إذا كنت تريد تحديد صور مختلفة بناءً على سمات الجهاز (يُعرف ذلك أيضًا باسم `الإخراج الفني`).
    - استخدم الكلمة الوصفية <code>srcset</code> و <code>x</code> في العنصر <code>img</code> لتوفير تلميحات للمتصفح بشأن أفضل صورة يمكن استخدامها عند الاختيار من بين نسب كثافة مختلفة.
remember:
  picture-support:
    - يبدأ العنصر  <code>picture</code> الوصول إلى المتصفحات.
      وعلى الرغم من أنه ليس متوفرًا في جميع المتصفحات إلى الآن، نوصي باستخدامه نظرًا لإمكانية التوافق مع إصدارات أقدم وإمكانية الاستفادة من <a href="http://picturefill.responsiveimages.org/">Picturefill polyfill</a>.
      راجع موقع <a href="http://responsiveimages.org/#implementation">ResponsiveImages.org</a> للحصول على مزيد من التفاصيل. 
  compressive:
    - توخ الحذر بشأن الأسلوب المضغوط نظرًا للتكاليف الزائدة التي يتسبب فيها بسبب الذاكرة وإلغاء الترميز.  يعد تغيير حجم الصور الكبيرة لتناسب الشاشات الصغيرة أمرًا مكلفًا وقد يتسبب في إزعاج خاصة على الأجهزة محدودة التكلفة حيث يكون كل من الذاكرة والمعالج محدودين.
shortlinks: 
  # NOTE: If the section titles or URL changes the following shortlinks must be updated
  - g.co/mobilesiteprinciple21
---

{% wrap content%}

<style>
  img, video, object {
    max-width: 100%;
  }

  img.center {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
  img.phone {
    max-height: 500px;
    
  }
</style>

{% include modules/toc.liquid %}

{% include modules/takeaway.liquid list=page.key-takeaways.img-in-markup %}


## استخدام أحجام نسبية للصور

لا تنس استخدام وحدات نسبية عند تحديد قيم عرض محددة للصور لمنعها من تجاوز حدود إطار العرض بدون قصد.  على سبيل المثال، سيؤدي استخدام `width: 50%;` إلى أن يصبح عرض الصورة 50% من عنصر الاحتواء (وليس إطار العرض أو حجم وحدة البكسل الفعلي).

نظرًا لأن CSS يتيح للمحتوى تجاوز حدود الحاوية، قد يلزم استخدام الحد الأقصى لقيمة العرض: 100% لمنع الصور والمحتوى الآخر من تجاوز الحدود.  على سبيل المثال:

{% highlight css %}
img, embed, object, video {
  max-width: 100%;
}
{% endhighlight %}

لا تنس توفير كلمات وصفية معبرة عبر السمة `alt` على عناصر `img`؛ نظرًا لأن ذلك يساعد في جعل موقعك على الويب أكثر سهولة في الاستخدام من خلال توفير سياق لأجهزة قراءة الشاشة والتقنيات الحساسة الأخرى.

## تحسين`img` باستخدام `srcset` للعمل على الأجهزة مرتفعة نسبة DPI

<div class="clear">
  <div class="g--half">
    <p>
      تحسِّن السمة <code>srcset</code> من سلوك العنصر <code>img</code>، مما يسهل توفير عدة ملفات صور لميزات أجهزة مختلفة. وكما هو الحال في <code>image-set</code> <a href="images-in-css.html#use-image-set-to-provide-high-res-images">وظيفية CSS</a>، الأصلية في CSS، تتيح <code>srcset</code> للمتصفح اختيار أفضل صورة بناءً على ميزات الجهاز، على سبيل المثال باستخدام صورة 2x على شاشة 2x، وربما في المستقبل، صورة 1x على جهاز 2x عند استخدام شبكة معدل نقل بيانات محدودة.
    </p>
  </div>

  <div class="g--half g--last">
    {% include modules/video.liquid id="Pzc5Dly_jEM" %}
  </div>
</div>

{% highlight html %}
<img src="photo.png" srcset="photo@2x.png 2x" ...>
{% endhighlight %}

في المتصفحات التي لا تتوافق مع `srcset`، يستخدم المتصفح ملف الصورة الافتراضي المحدد في السمة `src`.  ولذلك من الضروري دائمًا تضمين صورة 1x يمكن عرضها على أي جهاز، بغض النظر عن الإمكانيات.  وعندما يكون هناك توافق مع `srcset`، يتم تحليل قائمة الصور/الشروط المفصولة بفواصل قبل تقديم أية طلبات، ولا يتم تنزيل سوى الصورة المناسبة وعرضها.

وعلى الرغم من أن الشروط قد تتضمن كل شيء من مستوى كثافة وحدات بكسل وحتى قيمة العرض والطول، ليس هناك توافق جيد في الوقت الحالي إلا مع مستوى كثافة وحدات بكسل.  ولموازنة السلوك الحالي بالميزات المستقبلية، التزم بتقديم صورة 2x في السمة.

## الإخراج الفني في الصور سريعة الاستجابة باستخدام `picture`

يمكن إجراء تغيير للصور بناءً على سمات الجهاز، ويعرف ذلك أيضًا باسم الإخراج الفني ويمكن تنفيذه باستخدام العنصر picture.  يحدد عنصر <code>picture</code> حلاً تفسيريًا لتوفير عدة نسخ من الصورة بناءً على سمات مختلفة، مثل حجم الجهاز ودقته واتجاهه وغير ذلك الكثير.

<img class="center" src="img/art-direction.png" alt="مثال على الإخراج الفني"
srcset="img/art-direction.png 1x, img/art-direction-2x.png 2x">

{% include modules/remember.liquid title="هام" list=page.remember.picture-support %}

<div class="clear">
  <div class="g--half">
    <p>
      يجب استخدام العنصر <code>picture</code> عندما يكون مصدر الصورة متوفرًا بمستوى كثافة متعدد، أو عندما يكتشف التصميم سريع الاستجابة صورة مختلفة بعض الشيء عن بعض أنواع الشاشات.  وكما هو الحال في العنصر <code>video</code>، يمكن تضمين عدة عناصر <code>source</code>، مما يتيح تحديد ملفات صور مختلفة بناءً على استعلامات الوسائط أو تنسيق الصور.
    </p>
  </div>
  <div class="g--half g--last">
    {% include modules/video.liquid id="QINlm3vjnaY" %}
  </div>
</div>

{% include_code _code/media.html picture html %}

في المثال الوارد أعلاه، إذا كانت قيمة عرض المتصفح 800 بكسل على الأقل، فسيتم استخدام `head.jpg` أو `head-2x.jpg`، بناءً على دقة الجهاز. وإذا كانت قيمة المتصفح بين 450 بكسل و800 بكسل، فسيتم استخدام `head-small.jpg` أو `head-small-2x.jpg` بناءً على دقة الجهاز أيضًا. وبالنسبة إلى قيم عرض الشاشة الأقل من 450 بكسل ومدى التوافق مع الإصدارات الأقدم الذي لا يوفر العنصر `picture`، سيعرض المتصفح العنصر `img` بدلاً من ذلك، ويجب تضمينه دائمًا.

### صور الحجم النسبي

عندما لا يكون الحجم النهائي للصورة معروفًا، قد يصعب تحديد كلمة وصفية للكثافة في مصادر الصور.  وينطبق هذا خاصة على الصور التي تتسع لعرض تناسبي في المتصفح وتعد صورًا مائعة بناءً على حجم المتصفح.

وبدلاً من توفير أحجام صور وقيم كثافة ثابتة، يمكن تحديد حجم كل صورة يتم تقديمها من خلال إضافة كلمة وصفية إلى حجم عنصر الصورة، مما يتيح للمتصفح تلقائيًا حساب كثافة وحدات بكسل اللازمة واختيار الصورة الأفضل التي يمكن تنزيلها.

{% include_code _code/sizes.html picture html %}

يعرض المثال الموضح أعلاه صورة تحتل نصف قيمة عرض الإطار (`sizes=`50vw``)، وبناءً على قيمة عرض المتصفح ونسبة وحدات بكسل في الجهاز، يتم السماح للمتصفح باختيار الصورة المناسبة بغض النظر عن حجم نافذة المتصفح إذا كانت كبيرة.  على سبيل المثال، يعرض الجدول الوارد أدناه الصورة التي يمكن للمتصفح اختيارها:

<table class="table-4">
  <colgroup>
    <col span="1">
    <col span="1">
    <col span="1">
    <col span="1">
  </colgroup>
  <thead>
    <tr>
      <th data-th="عرض المتصفح">عرض المتصفح</th>
      <th data-th="معدل وحدات بكسل في الجهاز">معدل وحدات بكسل في الجهاز</th>
      <th data-th="الصورة المستخدمة">الصورة المستخدمة</th>
      <th data-th="الدقة الفعالة">الدقة الفعالة</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td data-th="عرض المتصفح">400 بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">1</td>
      <td data-th="الصورة المستخدمة"><code>200.png</code></td>
      <td data-th="الدقة الفعالة">1x</td>
    </tr>
    <tr>
      <td data-th="عرض المتصفح">400 بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">2</td>
      <td data-th="الصورة المستخدمة"><code>400.png</code></td>
      <td data-th="الدقة الفعالة">2x</td>
    </tr>
    <tr>
      <td data-th="عرض المتصفح">320بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">2</td>
      <td data-th="الصورة المستخدمة"><code>400.png</code></td>
      <td data-th="الدقة الفعالة">2.5x</td>
    </tr>
    <tr>
      <td data-th="عرض المتصفح">600 بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">2</td>
      <td data-th="الصورة المستخدمة"><code>800.png</code></td>
      <td data-th="الدقة الفعالة">2.67x</td>
    </tr>
    <tr>
      <td data-th="عرض المتصفح">640 بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">3</td>
      <td data-th="الصورة المستخدمة"><code>1000.png</code></td>
      <td data-th="الدقة الفعالة">3.125x</td>
    </tr>
    <tr>
      <td data-th="عرض المتصفح">1100 بكسل</td>
      <td data-th="معدل وحدات بكسل في الجهاز">1</td>
      <td data-th="الصورة المستخدمة"><code>1400.png</code></td>
      <td data-th="الدقة الفعالة">1.27x</td>
    </tr>
  </tbody>
</table>


### توضيح نقاط الفصل في الصور سريعة الاستجابة

في العديد من الحالات، قد يتغير الحجم أو تتغير الصورة بناءً على نقاط فصل تنسيق الموقع.  على سبيل المثال، في الشاشة الصغيرة، قد تحتاج إلى أن تمتد الصورة على عرض الإطار بالكامل، بينما يجب ألا تأخذ الصورة في الشاشات الكبيرة سوى مساحة صغيرة.  

{% include_code _code/breakpoints.html picture html %}

تستخدم السمة `sizes` في المثال السابق عدة استعلامات وسائط لتحديد حجم الصورة.  عندما تكون قيمة عرض المتصفح أكبر من 600 بكسل، ستظهر الصورة بنسبة 25% من عرض الإطار، وعندما تتراوح قيمتها بين 500 بكسل و600 بكسل، فستظهر بنسبة 50% من عرض الإطار، أما إذا كانت أقل من 500 بكسل، فستظهر بملء العرض.


## تعيين صور المنتج على إمكانية التوسيع

يريد العملاء دائمًا الاطلاع على الأشياء التي يرغبون في شرائها.  وفي مواقع البيع بالتجزئة على الويب، يتوقع المستخدمون تمكينهم من الاطلاع على صور مقربة بدقة عالية للمنتجات لمعرفة تفاصيل أكثر عن المنتج، ويتضح من [المشاركين في هذه الدراسة](/web/fundamentals/principles/research-study.html) أنه يحدث انزعاج عند عدم تمكن العملاء من ذلك.

<figure>
  <img src="img/sw-make-images-expandable-good.png" srcset="img/sw-make-images-expandable-good.png 1x, img/sw-make-images-expandable-good-2x.png 2x" alt="موقع J. Crews على الويب مع صورة منتج يمكن توسيعها">
  <figcaption>موقع J. Crews على الويب مع صورة منتج يمكن توسيعها</figcaption>
</figure>

يقدم موقع J. Crew على الويب مثالاً معبرًا عن الصور القابلة للنقر والتوسيع. ويشير التراكب القابل للاختفاء إلى أن الصورة قابلة للنقر، مما يوفر صورة قابلة للتكبير مع مظهر تفصيلي جيد.


## أساليب عرض الصور الأخرى

### الصور المضغوطة

يوفر [أسلوب الصور
المضغوطة](http://www.html5rocks.com/en/mobile/high-dpi/#toc-tech-overview) صورة 2x مضغوطة بنسبة كبيرة على جميع الأجهزة، بغض النظر عن إمكانيات الجهاز الفعلية.  وبناءً على نوع الصورة ومستوى الضغط، قد لا يظهر تغير على جودة الصورة، إلا أن حجم الملف يقل بشكل ملحوظ.

{% link_sample _code/compressive.html %}
      انظر المثال
{% endlink_sample %}

{% include modules/remember.liquid title="Important" list=page.remember.compressive %}

### استبدال صور جافا سكريبت

يساعد استبدال صور جافا سكريبت على فحص إمكانيات الجهاز و`إنجاز المطلوب`. ويمكنك تحديد معدل وحدات بكسل في الجهاز من خلال `window.devicePixelRatio`، ومعرفة عرض الشاشة وطولها، بل وتنفيذ بعض فحوصات الاتصال على الشبكة من خلال `navigator.connection` أو إصدار طلب وهمي. بعد جمع كل هذه المعلومات، يمكنك تحديد الصورة المطلوب تحميلها.

إحدى العقبات الكبيرة التي تواجه هذا الأسلوب أن استخدام جافا سكريبت يعني أنك ستؤجل تحميل الصورة حتى انتهاء المحلل المقدم على الأقل. وهذا يعني أن الصور لن تبدأ في التنزيل حتى بعد بدء حدث `pageload`. علاوة على ذلك، سيتولى المتصفح في الغالب تنزيل كل من صور 1x و2x، مما يؤدي إلى زيادة في وزن الصفحة.

{% include modules/nextarticle.liquid %}

{% endwrap %}

