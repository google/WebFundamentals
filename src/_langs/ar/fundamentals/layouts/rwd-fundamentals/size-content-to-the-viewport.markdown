---
layout: article
title: "ضبط حجم المحتوى بالنسبة إلى إطار العرض"
description: "لم تتم تهيئة معظم محتوى الويب للعمل على هذه التجارب متعددة الأجهزة. إلا أنه يمكنك التعرف على أساسيات تصميم موقع ويب يمكنه العمل على أجهزة الجوّال وسطح المكتب وأي جهاز آخر يتضمن شاشة."
introduction: "اعتاد مستخدمو أجهزة سطح المكتب وأجهزة الجوّال على تمرير مواقع الويب عموديًا وليس أفقيًا، ويؤدي إجبار المستخدم على التمرير أفقيًا أو التصغير للاطلاع على الصفحة بالكامل إلى ترك انطباع سيئ لدى المستخدم."
article:
  written_on: 2014-04-30
  updated_on: 2014-04-30
  order: 2
authors:
  - petelepage
collection: rwd-fundamentals
key-takeaways:
  set-viewport:
    - يمكنك استخدام علامة meta viewport للتحكم في العرض وضبط إطار عرض المتصفحات.
    - ضمِّن <code>width=device-width</code> لمطابقة عرض الشاشة بوحدات بكسل المستقلة للجهاز.
    - ضمِّن <code>initial-scale=1</code> لإنشاء علاقة من طرف لطرف بين وحدات بكسل CSS ووحدات بكسل المستقلة للجهاز.
    - تأكد من أنه يمكن الوصول إلى الصفحة من خلال عدم تعطيل ضبط المستخدم.
  size-content-to-vp:
    - لا تستخدم عناصر عرض ثابتة وكبيرة.
    - يجب ألا يعتمد المحتوى على عرض معين لإطار العرض حتى يتم عرضه جيدًا.
    - استخدم طلبات بحث وسائط CSS لتطبيق تنسيقات مختلفة للشاشات الصغيرة والكبيرة.
  media-queries:
    - يمكن استخدام طلبات بحث الوسائط لتطبيق الأنماط بناءً على سمات الجهاز.
    - استخدم <code>min-width</code> على <code>min-device-width</code> للتأكد من تجربة البحث.
    - استخدم الأحجام النسبية للعناصر لتجنب حدوث أعطال في التنسيق.
  choose-breakpoints:
    - أنشئ نقاط الفصل بناءً على المحتوى، وليس بناءً على أجهزة أو منتجات أو علامات تجارية محددة.
    - ابدأ التصميم لأجهزة الجوّال الأصغر أولاً، ثم حسِّن التجربة شيئًا فشيئًا عند توفر مزيد من الشاشات.
    - حافظ على عدم تجاوز أسطر النصوص 70 أو 80 حرفًا كحد أقصى.
remember:
  use-commas:
    - استخدم فاصلة لفصل السمات لضمان تمكن المتصفحات القديمة من تحليل السمات تحليلاً سليمًا.
shortlinks: 
  # NOTE: If the section titles or URL changes the following shortlinks must be updated
  - g.co/mobilesiteprinciple20
---
{% wrap content %}

<style>
  .smaller-img {
    width: 60%;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

  img.center {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

  video.responsiveVideo {
    width: 100%;
  }
</style>

{% include modules/takeaway.liquid list=page.key-takeaways.size-content-to-vp %}

عند إعداد موقع ويب للجوّال يتضمن علامة meta viewport، من السهل إنشاء محتوى صفحة بدون قصد لا يتناسب مع إطار العرض المحدد إلى حد ما. على سبيل المثال، قد تؤدي الصورة التي تظهر على قيمة عرض أوسع من إطار العرض إلى تمرير إطار العرض أفقيًا. ولذلك يجب ضبط هذا المحتوى ليتناسب مع قيمة عرض إطار العرض، حتى لا يحتاج المستخدم إلى التمرير أفقيًا.

نظرًا لأن أبعاد الشاشة وقيمة العرض في وحدات بكسل CSS تختلف اختلافًا كبيرًا بين الأجهزة (على سبيل المثال بين الهواتف والأجهزة اللوحية، بل وبين الهواتف بعضها البعض)، يجب ألا يعتمد المحتوى على قيمة عرض لإطار عرض معين حتى يظهر على نحو جيد.

سيؤدي تعيين قيم عرض CSS مطلقة لعناصر الصفحة (كما هو موضح في المثال أدناه) إلى أن يكون `div` عريضًا جدًا على إطار العرض في الجهاز الأكثر ضيقًا (مثل الجهاز الذي يتضمن وحدات بكسل CSS قيمتها 320، مثل جهاز iPhone). بدلاً من ذلك، يمكنك استخدام قيم العرض ذات الصلة، مثل `width: 100%`.  وبالمثل، توخ الحذر عند استخدام قيم مواضع كبيرة ومطلقة لأن ذلك قد يؤدي إلى خروج العنصر من إطار العرض على الشاشات الصغيرة.

<div class="clear">
  <div class="g--half">
    {% link_sample _code/vp-fixed.html %}
      <img src="imgs/vp-fixed-iph.png" srcset="imgs/vp-fixed-iph.png 1x, imgs/vp-fixed-iph-2x.png 2x"  alt="صفحة تتضمن عنصر عرض ثابتًا بقيمة 344 بكسل على جهاز iPhone.">
      انظر المثال
    {% endlink_sample %}
  </div>

  <div class="g--half g--last">
    {% link_sample _code/vp-fixed.html %}
      <img src="imgs/vp-fixed-n5.png" srcset="imgs/vp-fixed-n5.png 1x, imgs/vp-fixed-n5-2x.png 2x"  alt="صفحة تتضمن عنصر عرض ثابتًا بقيمة 344 بكسل على جهاز Nexus 5.">
      انظر المثال
    {% endlink_sample %}
  </div>
</div>

{% include modules/nextarticle.liquid %}

{% endwrap %}

