---
title: "はじめてのプログレッシブ ウェブアプリ"
description: "プログレッシブ ウェブアプリはウェブとアプリの両方の利点を兼ね備えたアプリです。このステップバイステップガイドでは、あなた自身のプログレッシブ ウェブアプリを構築し、そしてプログレッシブウェブアプリの開発で必要とされる基礎を学ぶことになります。それは、App Shellモデルや、App ShellやあなたのアプリケーションのキーデータなどをキャッシュするためのService Workerの使い方を含みます。"
updated_on: 2016-04-07
translators:
  - yoichiro
notes:
  devsummit-video: "さらに詳しくは、2015 年の Chrome Dev Summit で Alex Russell が行った、<a href='https://www.youtube.com/watch?v=MyQ8mtR9WxI'>プログレッシブ ウェブアプリ</a>についての講演内容をご覧ください。"
---

<p class="intro">
<a href="/web/progressive-web-apps">プログレッシブ ウェブアプリ</a>はウェブとアプリの両方の利点を兼ね備えたアプリです。ブラウザのタブで表示してすぐに利用することができ、インストールの必要はありません。使い続けてユーザーとの関係性が構築されていくにつれ、より強力なアプリとなります。不安定なネットワークでも迅速に起動し、関連性の高いプッシュ通知を送信することができます。また、ホーム画面にアイコンを表示することができ、トップレベルの全画面表示で読み込むことができます。
</p>

{% include shared/toc.liquid %}

## プログレッシブ ウェブアプリとは

プログレッシブ ウェブアプリには以下の特徴があります。

* **段階的** - プログレッシブ・エンハンスメントを基本理念としたアプリであるため、
ブラウザに関係なく、すべてのユーザーに利用してもらえます。
* **レスポンシブ** - パソコンでもモバイルでもタブレットでも、次世代の端末でも、
あらゆるフォームファクタに適合します。
* **ネットワーク接続に依存しない** - Service Worker の活用により、オフラインでも、
ネットワーク環境が良くない場所でも動作します。
* **アプリ感覚** - App Shell モデルに基づいて作られているため、アプリ感覚で操作できます。
* **常に最新** - Service Worker の更新プロセスにより、常に最新の状態に保たれます。
* **安全** - 覗き見やコンテンツの改ざんを防ぐため、HTTPS 経由で配信されます。
* **発見しやすい** - W3C のマニフェストとService Worker の登録スコープにより、
「アプリケーション」として認識されつつ、検索エンジンからも発見することができます。
* **再エンゲージメント可能** - プッシュ通知のような機能を通じで容易に
再エンゲージメントを促すことができます。
* **インストール可能** - ユーザーが気に入ればアプリのリンクをホーム画面に残して
おくことができ、アプリストアで探し回る必要はありません。
* **リンク可能** - URL を使って簡単に共有でき、複雑なインストールの必要はありません。

このスタートガイドでは、独自のプログレッシブ ウェブアプリを作成する方法について、
設計時の考慮事項や、実装の詳細など、順を追って説明します。この説明に沿って作業することで、
プログレッシブ ウェブアプリの原則に基づいたアプリを作成することができます。

{% include shared/note.liquid list=page.notes.devsummit-video %}

## 作成するもの

<div class="mdl-grid">
  <div class="mdl-cell mdl-cell--6-col">
    <p>
      このコードラボでは、プログレッシブ ウェブアプリの技法を使って
      お天気ウェブアプリを作成します。
    </p>
    <p>
      プログレッシブ ウェブアプリの特徴を基に考えてみましょう。
      <ul>
        <li><b>段階的</b> - 徐々に機能が強化されていくようにします。</li>
        <li><b>レスポンシブ</b> - あらゆるフォームファクタに適合するようにします。</li>
        <li><b>ネットワーク接続に依存しない</b> - Service Worker で App Shell をキャッシュします。</li>
        <li><b>アプリ感覚</b> - アプリと同様の操作で、都市の追加やデータの更新を行えるようにします。</li>
        <li><b>常に最新</b> - Service Worker で最新のデータをキャッシュします。</li>
        <li><b>安全</b> - HTTPS 対応のホストにアプリを実装します。</li>
        <li><b>発見しやすい</b> / インストール可能 - マニフェストを指定し、検索エンジンでアプリを簡単に見つけられるようにします。</li>
        <li><b>リンク可能</b> - ウェブページとして活用できるようにします。</li>
      </ul>
    </p>
  </div>
  <div class="mdl-cell mdl-cell--6-col">
    <a href="https://weather-pwa-sample.firebaseapp.com/final/">
      <img src="images/weather-ss.png">
    </a>
    <p>
      <a href="https://weather-pwa-sample.firebaseapp.com/final/" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">Try it</a>
    </p>
  </div>
</div>

## 学習する内容

* 「App Shell」方式に基づいてアプリを設計し構築する方法
* アプリをオフラインで動作可能にする方法
* データを保存し、後からオフラインで使用できるようにする方法

## カバーされるトピック

<ol>
{% for pageInSection in page.context.pages %}
  <li>
    <a href="{{pageInSection.relative_url }}">
      {{pageInSection.title}}
    </a>
  </li>
{% endfor %}
</ol>

## 必要なもの

* Chrome 47 以上
* HTML、CSS 、JavaScript の基本知識

このスタートガイドではプログレッシブ ウェブアプリに絞って説明するため、いくつかの
概念については説明を省略しています。また、単にコピーして貼り付けるだけの
コードブロック（スタイルや関連性のない JavaScript）を用意している箇所もあります。
