project_path: /web/tools/workbox/_project.yaml
book_path: /web/tools/workbox/_book.yaml

landing_page:
  header:
    description: <!-- No Description -->

  rows:
  - custom_html: >
      <style>
        .button-primary {
          background-color: #fb8c00;
        }
        .workbox-heading {
          text-align: center;
        }

        .workbox-heading__logo {
          margin: 0 40px;
        }
      </style>
      <div class="workbox-heading">
      <p><img class="workbox-heading__logo" src="../images/Workbox-Logo-Grey.svg" alt="Workbox Logo" /></p>

      <p class="devsite-landing-row-description">JavaScript Libraries for adding offline support to web apps</p>

      <p><a class="button button-primary" href="/web/tools/workbox/guides/get-started">Get Started</a></p>
      </div>

  - background: grey
    items:
    - description: >
        Welcome, Workbox is a set of libraries and Node modules that make it
        easy to cache assets and take full advantage of features used to
        build
        <a href="https://developers.google.com/web/progressive-web-apps/">progressive web apps</a>.

  - custom_html: >
      <style>
        .workbox-columns {
          display: flex;
          flex-direction: column;
        }

        .workbox-columns__column {
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
          margin: 8px 0;
        }

        .workbox-columns__column .row-icon {
          width: 120px;
          margin-right: 26px;
        }

        .workbox-columns__column .row-details {
          flex: 1;
        }

        @media (min-width: 700px) {
          .workbox-columns {
            flex-direction: row;
            justify-content: space-between;
          }

          .workbox-columns__column {
            width: 30%;
            flex-direction: column;
            margin: 0;
          }

          .workbox-columns__column .row-icon {
            width: auto;
            margin: 0;
          }
        }
      </style>
      <div class="workbox-columns">
        <div class="workbox-columns__column">
          <div class="row-icon">
            <img src="../images/performance.svg" alt="Performance Icon" />
          </div>
          <div class="row-details">
            <h3>Performance</h3>
            <p>Stop waiting on the network! You can improve your web apps performance by caching and serving your files, powered by a service worker.</p>
          </div>
        </div>
        <div class="workbox-columns__column">
          <div class="row-icon">
            <img src="../images/no-network.svg" alt="No Network Icon" />
          </div>
          <div class="row-details">
            <h3>Resilience</h3>
            <p>Even on an unreliable connection, your web app can still work using the right runtime caching strategies.</p>
          </div>
        </div>
        <div class="workbox-columns__column">
          <div class="row-icon">
            <img src="../images/pwa.svg" alt="Progressive Web App Logo" />
          </div>
          <div class="row-details">
            <h3>Enhancement</h3>
            <p>Looking to build a progressive web app? Workbox makes it easy to create an offline first experience.</p>
          </div>
        </div>
      </div>

  - heading: Why Workbox?
    background: grey
    items:
    - description: >
        <p>Workbox is a library that bakes in a set of best practices and removes the boilerplate every  developer writes when working with <a href="https://developers.google.com/web/fundamentals/primers/service-workers/">service workers</a>.</p>

        <ul>
        <li>Precaching</li>
        <li>Runtime caching</li>
        <li>Strategies</li>
        <li>Request routing</li>
        <li>Background sync</li>
        <li>Helpful debugging</li>
        <li>Greate flexibility and feature set than sw-precache and sw-toolbox</li>
        </ul>

  - custom_html: >
      <h2>Whats the API Like?</h2>
      <p>Below is a few examples of the Workbox API demonstrating some of
      the common approaches developers take in their service workers.</p>

      <h3>Cache Google Fonts</h3>

      <p>Wish you could rely on Google Fonts being available offline after the
      user has visited your site? Add a quick rule to serve them from the
      cache.</p>

      <pre class="prettyprint lang-javascript">
      workbox.routing.registerRoute(
        new RegExp('^https://fonts.(?:googleapis|gstatic).com/(.*)'),
        workbox.strategies.cacheFirst(),
      );
      </pre>

      <h3>Cache JavaScript and CSS</h3>
      <p>Make your JS and CSS ⚡ fast by returning the assets from the cache,
      while making sure they are updated in the background for the next use.</p>

      <pre class="prettyprint lang-javascript">
      workbox.routing.registerRoute(
        /\.(?:js|css)$/,
        workbox.strategies.staleWhileRevalidate(),
      );
      </pre>

      <h3>Cache Images</h3>
      <p>Images carry most of the weight for a web page. Use this rule to
      serve them quickly from the cache, while making sure you don’t cache
      them indefinitely, consuming your user’s stoage.</p>

      <pre class="prettyprint lang-javascript">
      workbox.routing.registerRoute(
        /\.(?:png|gif|jpg|jpeg|svg)$/,
        workbox.strategies.cacheFirst({
          cacheName: 'images',
          plugins: [
            new workbox.expiration.Plugin({
              maxEntries: 60,
              maxAgeSeconds: 30 * 24 * 60 * 60, // 30 Days
            }),
          ],
        }),
      );
      </pre>

      <h3>Precache your Files</h3>
      <p>Use Workbox to precache assets in your web app using our CLI, Node
      module or webpack plugin.</p>

      <div class="ds-selector-tabs">
        <section>
          <div class="kd-tabbutton">CLI</div>
          <pre class="prettyprint lang-javascript">workbox wizard</pre>
        </section>
        <section>
          <div class="kd-tabbutton">Node Module</div>
          <pre class="prettyprint lang-javascript">const workboxBuild = require('workbox-build');
      workboxBuild.generateSW({
        swDest: './build/sw.js'
        globDirectory: './app',
        globPatterns: '**\/*.{js,css,html,png}',
      });</pre>
        </section>
        <section>
          <div class="kd-tabbutton">webpack</div>
          <pre class="prettyprint lang-javascript">const WorkboxPlugin = require('workbox-webpack-plugin');

      // webpack config
      {
        plugins: [
          // Other webpack plugins...
          new WorkboxPlugin()
        ]
      }</pre>
        </section>
      </div>

      <h3>Offline Google Analytics</h3>
      <p>Want offline analytics for your offline PWA? No problem.</p>

      <pre class="prettyprint lang-javascript">
      workbox.googleAnalytics.initialize();
      </pre>

  - heading: "Workbox @ Chrome Dev Summit"
    background: grey
    items:
    - heading: ""
      description: >
        In this talk, Jeff Posnick gives an overview of Workbox's support for
        caching strategies, precaching, and handling navigation requests. It's
        filled throughout with real-world examples of how companies like
        Pinterest and WIRED are using Workbox in production.
      youtube_id: DtuJ55tmjps

  - heading: "Who's Using Workbox?"
    description: >
      <style>
      .using-workbox {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
      }

      .using-workbox div {
        flex-basis: 33%;
        text-align: center;
      }
      </style>
      <div class="using-workbox">
      <div><img src="../images/third_party/logos/wired.png" alt="Wired Logo" /></div>
      <div><img src="../images/third_party/logos/pinterest.png" alt="Pinterest Logo" /></div>
      <div><img src="../images/third_party/logos/starbucks.png" alt="Starbucks Logo" /></div>

      <div><img src="../images/third_party/logos/forbes.png" alt="Forbes Logo" /></div>
      <div><img src="../images/third_party/logos/iheartradio.png" alt="iHeart Radio Logo" /></div>
      <div><img src="../images/third_party/logos/tinder.png" alt="Tinder Logo" /></div>
      </div>

  - background: grey
    items:
    - custom_html: >
        <div style="width: 100%; text-align: center;">
          <h2>Learn how to use Workbox</h2>
          <p><a class="button button-primary" href="/web/tools/workbox/guides/get-started">Get Started</a></p>
        </div>

  - heading: "Contributors"
    description: >
      <p>Workbox is built and maintained by friendly bunch of contributors
      without whom none of this would be possible.</p>

      {% include 'web/tools/workbox/_shared/contributors.html' %}
