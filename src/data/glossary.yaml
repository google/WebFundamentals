# A collection of commonly used terms.

##
## Please add new terms in alphabetical order.
##

# EXAMPLE
# - term: Progressive Web App (REQUIRED)
#   description: A progressive web app is awesome. (STRONGLY ENCOURAGED) (HTML permitted)
#   acronym: PWA (OPTIONAL)
#   see: (OPTIONAL)
#     title: The Title of the Article (REQUIRED)
#     link: /web/fundamentals/woot (REQUIRED)
#   blink_component: Blink>GetUserMedia>WebCam (OPTIONAL - not used yet)
#   tags: (OPTIONAL - not used yet)
#   - tagA (REQUIRED - must validate from commonTags.json)
#   links: (OPTIONAL)
#   - title: Your First PWA Code Lab (REQUIRED)
#     link: /web/fundamentals/something (REQUIRED)

- term: Accelerated Mobile pages
  description: "Accelerated Mobile Pages are web pages that load very quickly. AMP pages are built with three core components: AMP HTML, AMP JS, and the AMP Cache. AMP HTML is HTML with some restrictions for reliable performance. AMP JS is a library that ensures the fast rendering of AMP HTML pages. The AMP Cache is a proxy-based content delivery network used to serve cached AMP HTML pages."
  acronym: AMP
  links:
  - title: Overview on ampproject.org
    link: https://www.ampproject.org/learn/overview/

- term: Add to Home Screen
  description: "A method where Progressive Web App developers can implement web app install banners to help users quickly and easily (with one touch) add web apps to their Android mobile deviceâ€™s home screen, making it easy to launch and return to an app."
  acronym: A2HS
  see:
    title: Web App Install Banners
    link: /web/fundamentals/app-install-banners/

- term: Application Shell
  description: "An application shell (or app shell) architecture is one way to build a Progressive Web App that reliably and instantly loads on your users' screens, similar to what you see in native applications. The app 'shell' is the minimal HTML, CSS and JavaScript required to power the user interface and when cached offline can ensure instant, reliably good performance to users on repeat visits."
  see:
    title: The App Shell Model
    link: /web/fundamentals/architecture/app-shell

- term: Content Delivery Network
  description: "A network of geographically distributed servers that cooperate to satisfy requests for content. CDNs optimize content delivery by distributing copies of files (such as videos, images, HTML, CSS and JavaScript) to multiple servers. This reduces latency by placing the content closer to the requestor. For example, if a user in India requests a web page from a Brazilian website, the request could be rerouted to deliver assets served from a local CDN server in Mumbai."
  acronym: CDN
  links:
  - title: Content deliver network
    link: https://en.wikipedia.org/wiki/Content_delivery_network

- term: Custom Element
  description: "A Custom Element is a developer defined HTML tag. These elements are the foundation of Web Components and can be used to create any sort of UI."
  see:
    title: "Custom Elements v1: Reusable Web Components"
    link: /web/fundamentals/architecture/building-components/customelements

- term: Fast, Integrated, Reliable, Engaging
  acronym: FIRE
  description: "Progressive Web Apps (PWA's) should be fast, integrated, reliable, and engaging."
  see:
    title: Progressive Web Apps
    link: /web/progressive-web-apps/

- term: Fetch API
  description: "The Fetch API is a promise-based JavaScript interface for requesting resources and reading responses. It provides a global fetch() method that gives an easy, logical way to fetch resources asynchronously across the network. Fetch is a successor to the older XMLHttpRequest."
  links:
  - title: Using Fetch
    link: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch

- term: First Contentful Paint
  acronym: FCP

- term: First Meaningful Paint
  acronym: FMP

- term: First, Last, Invert, Play
  acronym: FLIP
  description: "FLIP is a technique to set up high-performance animations using CSS transforms. To avoid janking animations, start and end position are evaluated during the setup so that the animation doesn't have to do any expensive calculations."
  links:
  - title: FLIP your animations
    link: https://aerotwist.com/blog/flip-your-animations/

- term: Flexbox
  description: "The Flexible Box Layout Module (Flexbox) is an API that provides tools to make web content responsive. Flexbox provides an efficient way to lay out, align, and distribute space among items in a container, even when their size is unknown and/or dynamic. The API allows the rapid creation of complex, flexible layouts, and features that have historically proved difficult with CSS."
  links:
  - title: Flexbox
    link: https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox

- term: Hypertext Transfer Protocol Secure
  description: "HTTPS is a protocol in which the connection between the server and client is encrypted, helping to protect users' information and prevent tampering. APIs such as the Service Worker, Google Maps API, and File API must be served over HTTPS. HTTPS is implemented using the Transport Layer Security (TLS) protocol. Although TLS supersedes Secure Sockets Layer (SSL), it is often referred to as SSL."
  acronym: HTTPS
  links:
  - title: HTTPS
    link: https://en.wikipedia.org/wiki/HTTPS

- term: Lifecycle Callback
  description: "Every Custom Element has a set of built-in lifecycle callbacks, or \"reactions\" that are called when the element is added/removed from the page, or has an attribute mutated."
  links:
  - title: Custom elements - lifecycles
    link: /web/fundamentals/architecture/building-components/customelements#reactions

- term: Mutation Observer
  description: "Mutation Observers are a web platform API to detect and react to change to the DOM tree. If an element is observed by a MutationObserver, events like appending a new element or removing and existing one will trigger a function to execute."
  see:
    title: Detect DOM changes with Mutation Observers
    link: /web/updates/2012/02/Detect-DOM-changes-with-Mutation-Observers

- term: Progressive Web App
  acronym: PWA
  description: "Progressive Web Apps are user experiences that have the reach of the web, and are fast, integrated, reliable and engaging."
  see:
    title: Progressive Web Apps
    link: /web/progressive-web-apps/

- term: Push, Render, Pre-cache, Lazy-load
  acronym: PRPL
  description: "PRPL is a pattern for structuring and serving Progressive Web Apps (PWAs), with an emphasis on the performance of app delivery and launch."
  see:
    title: The PRPL Pattern
    link: /web/fundamentals/performance/prpl-pattern/

- term: requestAnimationFrame
  acronym: rAF

- term: requestIdleCallback
  acronym: rIC

- term: Response, Animation, Idle, Load
  acronym: RAIL
  description: "RAIL is a user-centric performance model. Every web app has these four distinct aspects to its life cycle, and performance fits into them in different ways."
  see:
    title: Measure Performance with the RAIL Model
    link: /web/fundamentals/performance/rail

- term: Shadow DOM
  description: "Shadow DOM introduces scoped CSS and DOM to the web platform. It lets developers write encapsulated UI components which can be used in any application."
  link: /web/fundamentals/architecture/building-components/shadowdom

- term: Single Page App
  acronym: SPA

- term: Time To First Byte
  acronym: TTFB

- term: Time To First Paint
  acronym: TTFP

- term: Time To Interactive
  acronym: TTI

- term: Web Components
  description: "Web components are a set of web platform APIs that allow you to create new custom, reusable, encapsulated HTML tags to use in web pages and web apps. Custom components and widgets build on the Web Component standards, will work across modern browsers, and can be used with any JavaScript library or framework that works with HTML."
  links:
  - title: Introduction on webcomponents.org
    link: https://www.webcomponents.org/introduction
